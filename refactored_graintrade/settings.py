"""
Django settings for refactored_graintrade project.

Generated by 'django-admin startproject' using Django 4.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path

# https://django-configurations.readthedocs.io/en/latest/patterns.html#
from configurations import Configuration, importer

from dotenv import load_dotenv


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Build paths for .env file
dotenv_path = Path(__file__).resolve().parent.parent / '.env'
load_dotenv(dotenv_path=dotenv_path)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# ------------------
# Base Configuration
# ------------------

class Base(Configuration):
    SITE_ID = 1
    ALLOWED_HOSTS = ['localhost', '127.0.0.1', '*']
    SITE_HOST = "http://localhost:8000"
    # Application definition
    INSTALLED_APPS = [
        'django.contrib.admin',
        'django.contrib.auth',
        'django.contrib.contenttypes',
        'django.contrib.sessions',
        'django.contrib.messages',
        'django.contrib.staticfiles',
        'django.contrib.gis',
        # 3rd parties
        'rest_framework',
        'rest_framework_simplejwt',
        'dotenv',
        "celery",
        "django_celery_results",
        "django_celery_beat",
        # local
        'offers.apps.OffersConfig',
    ]

    MIDDLEWARE = [
        'django.middleware.security.SecurityMiddleware',
        'django.contrib.sessions.middleware.SessionMiddleware',
        'django.middleware.common.CommonMiddleware',
        'django.middleware.csrf.CsrfViewMiddleware',
        'django.contrib.auth.middleware.AuthenticationMiddleware',
        'django.contrib.messages.middleware.MessageMiddleware',
        'django.middleware.clickjacking.XFrameOptionsMiddleware',
    ]

    ROOT_URLCONF = 'refactored_graintrade.urls'

    TEMPLATES = [
        {
            'BACKEND': 'django.template.backends.django.DjangoTemplates',
            'DIRS': [BASE_DIR / 'templates']
            ,
            'APP_DIRS': True,
            'OPTIONS': {
                'context_processors': [
                    'django.template.context_processors.debug',
                    'django.template.context_processors.request',
                    'django.contrib.auth.context_processors.auth',
                    'django.contrib.messages.context_processors.messages',
                ],
            },
        },
    ]

    WSGI_APPLICATION = 'refactored_graintrade.wsgi.application'
    # Password validation
    # https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

    AUTH_PASSWORD_VALIDATORS = [
        {
            'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
        },
    ]

    # Internationalization
    # https://docs.djangoproject.com/en/4.2/topics/i18n/

    LANGUAGE_CODE = 'en-us'

    TIME_ZONE = 'UTC'

    USE_I18N = True

    USE_TZ = True

    # Static files (CSS, JavaScript, Images)
    # https://docs.djangoproject.com/en/4.2/howto/static-files/

    STATIC_URL = 'static/'

    # Default primary key field type
    # https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

    DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

    REST_FRAMEWORK = {
        # Use Django's standard `django.contrib.auth` permissions,
        # or allow read-only access for unauthenticated users.
        'DEFAULT_PERMISSION_CLASSES': [
            'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
        ]
    }
    # Celery Configuration Options
    CELERY_IMPORTS = (
        "offers.tasks",
    )
    CELERY_TIMEZONE = "Europe/Kyiv"
    CELERY_TASK_TRACK_STARTED = True
    CELERY_TASK_TIME_LIMIT = 30 * 60
    CELERY_CACHE_BACKEND = 'default'
    CELERY_RESULT_EXTENDED = True
    CELERY_TASK_TRACK_STARTED = True
    CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'


# --------------------
# Development settings
# --------------------

class Dev(Base):
    # SECURITY WARNING: keep the secret key used in production secret!
    SECRET_KEY = 'django-insecure-ij*e%-3@)7@bzlw9p8fc&m(yg-*m0azwj+lrxkwj6se6f2=9=8'
    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = True

    # Database
    # https://docs.djangoproject.com/en/4.2/ref/settings/#databases
    DATABASES = {
        "default": {
            "ENGINE": "django.contrib.gis.db.backends.postgis",
            "NAME": os.environ.get("DB_NAME"),
            "USER": os.environ.get("DB_USER"),
            "PASSWORD": os.environ.get("DB_PASSWORD"),
            "HOST": "localhost",
            "PORT": 5432,
        }
    }

    CACHES = {
        "default": {
            "BACKEND": "django_redis.cache.RedisCache",
            "LOCATION": "redis://0.0.0.0:6379/1",
            "OPTIONS": {"CLIENT_CLASS": "django_redis.client.DefaultClient"},
            "KEY_PREFIX": "graintrade",
        },
    }
    # Logger
    LOGGING = {
        "version": 1,
        "disable_existing_loggers": False,
        "formatters": {
            "default": {'format': '[%(asctime)s] %(name)-12s %(levelname)-8s %(message)s',},
            "simple": {"format": "%(levelname)s %(message)s"},
        },
        "handlers": {
            "log_to_stdout": {
                "level": "DEBUG",
                "class": "logging.StreamHandler",
                "formatter": "default",
            },
        },
        "loggers": {
            "offers": {
                "handlers": ["log_to_stdout"],
                "level": "INFO",
                "propagate": True,
            },
            # 'django.db.backends': {
            #     'level': 'DEBUG',
            # }
        },
        "root": {
            "handlers": ["log_to_stdout"],
            "level": "INFO",
        }
    }

    # CELERY_BROKER_URL = "redis://0.0.0.0:6379/3"
    # CELERY_RESULT_BACKEND = "redis://0.0.0.0:6379/3"


    # LOGOUT_REDIRECT_URL = "home"
    # LOGIN_REDIRECT_URL = "home"

    # # CONFIG
    # EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
    # EMAIL_FROM_USER = os.environ.get("EMAIL_FROM_USER")
    # EMAIL_HOST = os.environ.get("EMAIL_HOST")
    # EMAIL_HOST_USER = os.environ.get("EMAIL_HOST_USER")
    # EMAIL_HOST_PASSWORD = os.environ.get("EMAIL_HOST_PASSWORD")
    # EMAIL_USE_TLS = True
    # EMAIL_PORT = 587
    # DEFAULT_FROM_EMAIL = os.environ.get("DEFAULT_FROM_EMAIL")


# -------------------
# Production settings
# -------------------


class Prod(Base):
    SECRET_KEY = os.environ.get("SECRET_KEY")
    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = False
    # TIME_ZONE = "America/New_York"
    # SITE_HOST = "https://some-production-domain.com"

    # Database
    # https://docs.djangoproject.com/en/4.0/ref/settings/#databases
    DATABASES = {
        "default": {
            "ENGINE": "django.contrib.gis.db.backends.postgis",
            "NAME": os.environ.get("DB_NAME"),
            "USER": os.environ.get("DB_USER"),
            "PASSWORD": os.environ.get("DB_PASSWORD"),
            "HOST": "db",
            "PORT": 5432,
        }
    }
    # https://django-select2.readthedocs.io/en/latest/index.html
    CACHES = {
        "default": {
            "BACKEND": "django_redis.cache.RedisCache",
            "LOCATION": "redis://redis:6379/1",
            "OPTIONS": {"CLIENT_CLASS": "django_redis.client.DefaultClient"},
            "KEY_PREFIX": "graintrade",
        },
    }
    # STATIC_URL = "staticfiles/"
    # STATIC_ROOT = BASE_DIR / "staticfiles"
    # MEDIA_URL = "/mediafiles/"
    # MEDIA_ROOT = BASE_DIR / "mediafiles"
    # CSRF_TRUSTED_ORIGINS = ["https://*", "http://*/"]

    # AWS_ACCESS_KEY_ID = os.environ.get("AWS_ACCESS_KEY_ID")
    # AWS_SECRET_ACCESS_KEY = os.environ.get("AWS_SECRET_ACCESS_KEY")
    #
    # AWS_STORAGE_BUCKET_NAME = os.environ.get("AWS_STORAGE_BUCKET_NAME")
    #
    # AWS_S3_ENDPOINT_URL = "https://{}".format(os.environ.get("AWS_S3_ENDPOINT_URL"))
    # AWS_S3_CUSTOM_DOMAIN = os.environ.get("AWS_S3_CUSTOM_DOMAIN")
    # AWS_S3_OBJECT_PARAMETERS = {
    #     "CacheControl": "max-age=86400",
    # }
    # AWS_LOCATION = f"{AWS_STORAGE_BUCKET_NAME}/staticfiles"
    # AWS_DEFAULT_ACL = "public-read"
    #
    # STATICFILES_STORAGE = "storages.backends.s3boto3.S3Boto3Storage"
    #
    # STATIC_URL = f"{AWS_S3_CUSTOM_DOMAIN}/{AWS_LOCATION}/"
    #
    # # public media settings
    # PUBLIC_MEDIA_LOCATION = f"{AWS_STORAGE_BUCKET_NAME}/mediafiles"
    # MEDIA_URL = f"{AWS_S3_ENDPOINT_URL}/{PUBLIC_MEDIA_LOCATION}/"
    # DEFAULT_FILE_STORAGE = "core.storage_backends.PublicMediaStorage"
    # # private media settings
    # PRIVATE_MEDIA_LOCATION = f"{AWS_STORAGE_BUCKET_NAME}/private"
    # PRIVATE_FILE_STORAGE = "core.storage_backends.PrivateMediaStorage"
    #
    # CELERY_BROKER_URL = "redis://redis:6379/3"
    # CELERY_RESULT_BACKEND = "redis://redis:6379/3"

    # LOGOUT_REDIRECT_URL = "home"
    # LOGIN_REDIRECT_URL = "home"

    # # CONFIG
    # EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
    # EMAIL_FROM_USER = os.environ.get("EMAIL_FROM_USER")
    # EMAIL_HOST = os.environ.get("EMAIL_HOST")
    # EMAIL_HOST_USER = os.environ.get("EMAIL_HOST_USER")
    # EMAIL_HOST_PASSWORD = os.environ.get("EMAIL_HOST_PASSWORD")
    # EMAIL_USE_TLS = True
    # EMAIL_PORT = 587
    # DEFAULT_FROM_EMAIL = os.environ.get("DEFAULT_FROM_EMAIL")

